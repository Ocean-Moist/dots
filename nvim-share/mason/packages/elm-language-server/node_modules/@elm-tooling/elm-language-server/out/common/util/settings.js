"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Settings = void 0;
const tsyringe_1 = require("tsyringe");
let Settings = class Settings {
    constructor(config, clientCapabilities) {
        this.clientCapabilities = clientCapabilities;
        this.clientSettings = {
            elmFormatPath: "",
            elmPath: "",
            elmTestPath: "",
            elmReviewPath: "",
            trace: { server: "off" },
            disableElmLSDiagnostics: false,
            skipInstallPackageConfirmation: false,
            onlyUpdateDiagnosticsOnSave: false,
            elmReviewDiagnostics: "off",
        };
        this.initDone = false;
        this.connection = tsyringe_1.container.resolve("Connection");
        this.updateSettings(config);
    }
    initFinished() {
        this.initDone = true;
    }
    getClientSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.initDone &&
                this.clientCapabilities.workspace &&
                this.clientCapabilities.workspace.configuration) {
                this.updateSettings((yield this.connection.workspace.getConfiguration("elmLS")));
            }
            return this.clientSettings;
        });
    }
    get extendedCapabilities() {
        return this.clientSettings.extendedCapabilities;
    }
    updateSettings(config) {
        this.clientSettings = Object.assign(Object.assign({}, this.clientSettings), config);
    }
    isCodeActionResolveSupported(property) {
        var _a, _b, _c;
        const value = (_c = (_b = (_a = this.clientCapabilities.textDocument) === null || _a === void 0 ? void 0 : _a.codeAction) === null || _b === void 0 ? void 0 : _b.resolveSupport) === null || _c === void 0 ? void 0 : _c.properties.includes(property);
        if (value === undefined) {
            return false;
        }
        return value;
    }
};
exports.Settings = Settings;
exports.Settings = Settings = __decorate([
    (0, tsyringe_1.injectable)(),
    __metadata("design:paramtypes", [Object, Object])
], Settings);
//# sourceMappingURL=settings.js.map