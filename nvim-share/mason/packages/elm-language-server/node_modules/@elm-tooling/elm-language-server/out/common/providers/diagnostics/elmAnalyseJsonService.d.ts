export interface IElmAnalyseJson {
    checks?: {
        BooleanCase?: boolean;
        DebugLog?: boolean;
        DebugTodo?: boolean;
        DropConcatOfLists?: boolean;
        DropConsOfItemAndList?: boolean;
        DuplicateImport?: boolean;
        DuplicateImportedVariable?: boolean;
        ExposeAll?: boolean;
        FileLoadFailed?: boolean;
        NoUncurriedPrefix?: boolean;
        FunctionInLet?: boolean;
        ImportAll?: boolean;
        MapNothingToNothing?: boolean;
        MultiLineRecordFormatting?: boolean;
        NoTopLevelSignature?: boolean;
        SingleFieldRecord?: boolean;
        TriggerWords?: string[];
        UnnecessaryListConcat?: boolean;
        UnnecessaryParens?: boolean;
        UnnecessaryPortModule?: boolean;
        UnusedImport?: boolean;
        UnusedImportAlias?: boolean;
        UnusedImportedVariable?: boolean;
        UnusedPatternVariable?: boolean;
        UnusedTopLevel?: boolean;
        UnusedTypeAlias?: boolean;
        UnusedValueConstructor?: boolean;
        UnusedVariable?: boolean;
        UseConsOverConcat?: boolean;
        MissingTypeAnnotation?: boolean;
    };
    excludedPaths?: string[];
}
export interface IElmAnalyseJsonService {
    getElmAnalyseJson(workspacePath: string): IElmAnalyseJson;
}
export declare class ElmAnalyseJsonService implements IElmAnalyseJsonService {
    private connection;
    private elmAnalyseJson;
    constructor();
    getElmAnalyseJson(workspacePath: string): IElmAnalyseJson;
}
