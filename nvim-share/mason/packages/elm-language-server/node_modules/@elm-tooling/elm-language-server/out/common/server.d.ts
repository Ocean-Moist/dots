import { Disposable, InitializeParams, InitializeResult } from "vscode-languageserver";
import { IFileSystemHost, InitializationOptions } from "./types";
export interface ILanguageServer extends Disposable {
    readonly capabilities: InitializeResult;
    init(): Promise<void>;
    registerInitializedProviders(): void;
    initSuccessfull: boolean;
}
export declare class Server implements ILanguageServer {
    private params;
    private fileSystemHost;
    private connection;
    initSuccessfull: boolean;
    private isVirtualFileSystem;
    private disposables;
    constructor(params: InitializeParams, fileSystemHost: IFileSystemHost, initializationOptions: InitializationOptions);
    get capabilities(): InitializeResult;
    init(): Promise<void>;
    registerInitializedProviders(): Promise<void>;
    dispose(): void;
    private getElmJsonFolder;
    private findTopLevelFolders;
    private getWorkspaceUri;
}
