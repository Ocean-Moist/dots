"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RenameUtils = void 0;
const vscode_languageserver_1 = require("vscode-languageserver");
const references_1 = require("../../compiler/references");
const treeUtils_1 = require("./treeUtils");
class RenameUtils {
    static getRenameAffectedNodes(program, uri, position) {
        const checker = program.getTypeChecker();
        const sourceFile = program.getSourceFile(uri);
        if (sourceFile) {
            const nodeAtPosition = treeUtils_1.TreeUtils.getNamedDescendantForPosition(sourceFile.tree.rootNode, position);
            const definitionNode = checker.findDefinition(nodeAtPosition, sourceFile).symbol;
            if (definitionNode) {
                const refTree = program.getSourceFile(definitionNode.node.tree.uri);
                if (refTree && refTree.writeable) {
                    return {
                        originalNode: nodeAtPosition,
                        references: references_1.References.find(definitionNode, program),
                    };
                }
                if (refTree && !refTree.writeable) {
                    throw new vscode_languageserver_1.ResponseError(1, "Can not rename, due to source being outside of you project.");
                }
            }
        }
    }
}
exports.RenameUtils = RenameUtils;
//# sourceMappingURL=renameUtils.js.map