import { ClientCapabilities } from "vscode-languageserver";
export interface IClientSettings {
    elmFormatPath: string;
    elmPath: string;
    elmTestPath: string;
    elmReviewPath: string;
    trace: {
        server: string;
    };
    extendedCapabilities?: IExtendedCapabilites;
    disableElmLSDiagnostics: boolean;
    skipInstallPackageConfirmation: boolean;
    onlyUpdateDiagnosticsOnSave: boolean;
    elmReviewDiagnostics: "off" | "warning" | "error";
}
export interface IExtendedCapabilites {
    moveFunctionRefactoringSupport: boolean;
    exposeUnexposeSupport: boolean;
    clientInitiatedDiagnostics: boolean;
}
export declare class Settings {
    private clientCapabilities;
    private clientSettings;
    private connection;
    private initDone;
    constructor(config: IClientSettings, clientCapabilities: ClientCapabilities);
    initFinished(): void;
    getClientSettings(): Promise<IClientSettings>;
    get extendedCapabilities(): IExtendedCapabilites | undefined;
    private updateSettings;
    isCodeActionResolveSupported(property: string): boolean;
}
