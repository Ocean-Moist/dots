import { CancellationToken, Connection } from "vscode-languageserver";
/**
 * MultistepOperation taken from Typescript: https://github.com/microsoft/TypeScript/blob/79ffd03f8b73010fa03cef624e5f1770bc9c975b/src/server/session.ts#L166
 */
interface INextStep {
    immediate(action: () => void): void;
    delay(ms: number, action: () => void): void;
    promise(action: () => Promise<void>): void;
}
export declare class MultistepOperation implements INextStep {
    private connection;
    private timerHandle;
    private immediateId;
    private savedPromise;
    private cancellationToken;
    private done;
    constructor(connection: Connection);
    startNew(cancellationToken: CancellationToken, action: (next: INextStep) => void, done: () => void): void;
    private complete;
    immediate(action: () => void): void;
    delay(ms: number, action: () => void): void;
    promise(action: () => Promise<void>): void;
    private executeAction;
    private setTimerHandle;
    private setImmediateId;
    private hasPendingWork;
}
export {};
